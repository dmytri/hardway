#!/bin/sh

#
# conf
#

PASS=RedHat/vm
PASSWORD=$(pass show "$PASS" | tr -d '\n') || exit 1

NETWORK="Kubernetes"

SSH="ssh -o StrictHostKeyChecking=no"
SCP="scp -o StrictHostKeyChecking=no"

#
# copy public ssh key
#

cp ~/.ssh/id_rsa.pub _build/id_rsa.pub

#
# generate certs
#

[ -d _build ] || mkdir _build

cfssl gencert -initca conf/ca-csr.json | cfssljson -bare _build/ca

cfssl gencert \
  -ca=_build/ca.pem \
  -ca-key=_build/ca-key.pem \
  -config=conf/ca-config.json \
  -profile=kubernetes \
  conf/kubernetes-csr.json | cfssljson -bare _build/kubernetes

chmod a+r _build/kubernetes-key.pem

#
# make base vms
#

function mkvm {

  IMG=_build/$1.qcow2

  if [ ! -f $IMG ]; then
    virt-builder \
      fedora-29 \
      -o "$IMG" \
      --format qcow2 \
      --size $2G \
      --uninstall firewalld \
      --update \
      --selinux-relabel \
      --root-password password:"$PASSWORD" \

    virt-copy-in \
      -a "$IMG" \
     conf/config \
     /etc/selinux/

    virt-copy-in \
      -a "$IMG" \
     conf/hosts \
     /etc/

  fi

  virt-copy-in \
    -a "$IMG" \
   _build/ca.pem \
   _build/kubernetes-key.pem \
   _build/kubernetes.pem \
   /root/

}

mkvm kube 6
mkvm kube-worker 20

#
# install vms
#

function installvirt {

  sudo cp _build/"$3".qcow2 _build/vm_"$1".qcow2

  echo installing "$1" "$2" "$3" "$4" "$5"

  sudo virsh net-update $NETWORK add ip-dhcp-host \
    "<host mac='aa:aa:aa:aa:aa:$5' \
     name='$1' ip='$4' />" \
     --live --config

  sudo virt-sysprep -a _build/vm_"$1".qcow2 --hostname "$1" \
    --ssh-inject root:file:_build/id_rsa.pub

  sudo virt-install \
    --name "$1" \
    --cpu host \
    --vcpus 2 \
    --ram "$2" \
    --disk _build/vm_"$1".qcow2 \
    --network network:"$NETWORK",mac="aa:aa:aa:aa:aa:$5" \
    --os-variant fedora29 \
    --virt-type kvm \
    --graphics none \
    --noautoconsole \
    --import

  case $1 in
        etcd1|etcd2|etcd3)       
          echo etcd "$4"
          while ! $SSH root@$4 echo "UP"
          do
            sleep 1
          done
          $SCP conf/etcd-health-check root@$4:
          $SCP conf/write-etcd-conf root@$4:
          $SSH root@$4 <<EOF
yes | dnf install etcd
[ -d /etc/etcd ] || mkdir -p /etc/etcd
[ -f ~/etcd.conf.save ] || cp /etc/etcd/etcd.conf ~/etcd.conf.save
cp ca.pem kubernetes-key.pem kubernetes.pem /etc/etcd/
INTERNAL_IP='$4' bash ~/write-etcd-conf

sudo systemctl enable etcd
EOF
        ;;
        controller1|controller2)
          echo controller "$4"
        ;;            
  esac 

  sudo virsh shutdown "$1"
  
}

installvirt "etcd1" 512 "kube" "10.240.0.11" "e1"
installvirt "etcd2" 512 "kube" "10.240.0.12" "e2"
installvirt "etcd3" 512 "kube" "10.240.0.13" "e3"
installvirt "controller1" 512 "kube" "10.240.0.21" "c1"
installvirt "controller2" 512 "kube" "10.240.0.22" "c2"
installvirt "worker1" 1024 "kube-worker" "10.240.0.31" "a1"
installvirt "worker2" 1024 "kube-worker" "10.240.0.32" "a2"
installvirt "lb1" 512 "kube" "10.240.0.41" "b1"
installvirt "lb2" 512 "kube" "10.240.0.42" "b2"


